// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TelephoneDirectoryApp.Data.DataContext;

namespace TelephoneDirectoryApp.Data.DataContext.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20210814152245_AddReportRequestsTable")]
    partial class AddReportRequestsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Firm")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("TypeId");

                    b.ToTable("ContactInformations");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContactInformationTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContactInformationTypeId");

                    b.ToTable("ContactInformationType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550d492d-6fc0-46c2-b993-0937f09972e5"),
                            Name = "Telefon Numarası"
                        },
                        new
                        {
                            Id = new Guid("68c7026d-d3a0-4f39-b724-473e221aaa44"),
                            Name = "Ev Telefon Numarası"
                        },
                        new
                        {
                            Id = new Guid("fa1cdb89-a3f9-4154-bd86-284b12f10dd2"),
                            Name = "İşyeri Telefon Numarası"
                        },
                        new
                        {
                            Id = new Guid("8aba81e1-8539-4a02-ba02-655f9e6cd8a5"),
                            Name = "Email"
                        },
                        new
                        {
                            Id = new Guid("c19b73c3-1f0a-497f-bd7e-824a658480ce"),
                            Name = "Konum"
                        });
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ReportRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ReportRequests");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformation", b =>
                {
                    b.HasOne("TelephoneDirectoryApp.Model.Entity.Contact", "Contact")
                        .WithMany("ContactInformations")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelephoneDirectoryApp.Model.Entity.ContactInformationType", "ContactInformationType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("ContactInformationType");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformationType", b =>
                {
                    b.HasOne("TelephoneDirectoryApp.Model.Entity.ContactInformationType", null)
                        .WithMany("ContactInformationTypes")
                        .HasForeignKey("ContactInformationTypeId");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.Contact", b =>
                {
                    b.Navigation("ContactInformations");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformationType", b =>
                {
                    b.Navigation("ContactInformationTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
