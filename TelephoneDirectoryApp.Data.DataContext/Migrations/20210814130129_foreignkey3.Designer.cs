// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TelephoneDirectoryApp.Data.DataContext;

namespace TelephoneDirectoryApp.Data.DataContext.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20210814130129_foreignkey3")]
    partial class foreignkey3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Firm")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContactInformationTypeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("ContactInformationTypeId");

                    b.ToTable("ContactInformations");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ContactInformationType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d6b4f7c-b702-4c8b-b72e-24005d5a9744"),
                            Name = "Telefon Numarası"
                        },
                        new
                        {
                            Id = new Guid("2e4d80d2-cff0-4539-85e9-7fdb711f4325"),
                            Name = "Ev Telefon Numarası"
                        },
                        new
                        {
                            Id = new Guid("05257b07-ec1b-4def-8142-3f960b5f21c8"),
                            Name = "İşyeri Telefon Numarası"
                        },
                        new
                        {
                            Id = new Guid("7900137f-93f4-441c-ae60-dde217d4fead"),
                            Name = "Email"
                        },
                        new
                        {
                            Id = new Guid("5c6443d0-71f4-4310-827c-c9c9cdf7b7ae"),
                            Name = "Konum"
                        });
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformation", b =>
                {
                    b.HasOne("TelephoneDirectoryApp.Model.Entity.Contact", "Contact")
                        .WithMany("ContactInformations")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelephoneDirectoryApp.Model.Entity.ContactInformationType", "ContactInformationType")
                        .WithMany("ContactInformations")
                        .HasForeignKey("ContactInformationTypeId");

                    b.Navigation("Contact");

                    b.Navigation("ContactInformationType");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.Contact", b =>
                {
                    b.Navigation("ContactInformations");
                });

            modelBuilder.Entity("TelephoneDirectoryApp.Model.Entity.ContactInformationType", b =>
                {
                    b.Navigation("ContactInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
